//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MultiLeaseModel", "fk_Vehicles_Colors", "Colors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MultiLease.Color), "Vehicles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MultiLease.Vehicle), true)]
[assembly: EdmRelationshipAttribute("MultiLeaseModel", "fk_Leases_Customers_LP", "Customers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MultiLease.Customer), "LeasesP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MultiLease.LeasesP), true)]
[assembly: EdmRelationshipAttribute("MultiLeaseModel", "fk_Leases_Status_LP", "LeaseStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MultiLease.LeaseStatu), "LeasesP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MultiLease.LeasesP), true)]
[assembly: EdmRelationshipAttribute("MultiLeaseModel", "fk_Leases_Terms_LP", "LeaseTerms", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MultiLease.LeaseTerm), "LeasesP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MultiLease.LeasesP), true)]
[assembly: EdmRelationshipAttribute("MultiLeaseModel", "fk_Leases_Vehicles_LP", "Vehicles", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MultiLease.Vehicle), "LeasesP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MultiLease.LeasesP), true)]
[assembly: EdmRelationshipAttribute("MultiLeaseModel", "fk_Payments_Leases", "LeasesP", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MultiLease.LeasesP), "Payments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MultiLease.Payment), true)]
[assembly: EdmRelationshipAttribute("MultiLeaseModel", "fk_Vehicles_Models", "Models", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MultiLease.Model), "Vehicles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MultiLease.Vehicle), true)]
[assembly: EdmRelationshipAttribute("MultiLeaseModel", "fk_Vehicles_Types", "Types", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MultiLease.Type), "Vehicles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MultiLease.Vehicle), true)]

#endregion

namespace MultiLease
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MultiLeaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MultiLeaseEntities object using the connection string found in the 'MultiLeaseEntities' section of the application configuration file.
        /// </summary>
        public MultiLeaseEntities() : base("name=MultiLeaseEntities", "MultiLeaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MultiLeaseEntities object.
        /// </summary>
        public MultiLeaseEntities(string connectionString) : base(connectionString, "MultiLeaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MultiLeaseEntities object.
        /// </summary>
        public MultiLeaseEntities(EntityConnection connection) : base(connection, "MultiLeaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Color> Colors
        {
            get
            {
                if ((_Colors == null))
                {
                    _Colors = base.CreateObjectSet<Color>("Colors");
                }
                return _Colors;
            }
        }
        private ObjectSet<Color> _Colors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeasesP> LeasesPs
        {
            get
            {
                if ((_LeasesPs == null))
                {
                    _LeasesPs = base.CreateObjectSet<LeasesP>("LeasesPs");
                }
                return _LeasesPs;
            }
        }
        private ObjectSet<LeasesP> _LeasesPs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseStatu> LeaseStatus
        {
            get
            {
                if ((_LeaseStatus == null))
                {
                    _LeaseStatus = base.CreateObjectSet<LeaseStatu>("LeaseStatus");
                }
                return _LeaseStatus;
            }
        }
        private ObjectSet<LeaseStatu> _LeaseStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseTerm> LeaseTerms
        {
            get
            {
                if ((_LeaseTerms == null))
                {
                    _LeaseTerms = base.CreateObjectSet<LeaseTerm>("LeaseTerms");
                }
                return _LeaseTerms;
            }
        }
        private ObjectSet<LeaseTerm> _LeaseTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Model> Models
        {
            get
            {
                if ((_Models == null))
                {
                    _Models = base.CreateObjectSet<Model>("Models");
                }
                return _Models;
            }
        }
        private ObjectSet<Model> _Models;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Payment> Payments
        {
            get
            {
                if ((_Payments == null))
                {
                    _Payments = base.CreateObjectSet<Payment>("Payments");
                }
                return _Payments;
            }
        }
        private ObjectSet<Payment> _Payments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Type> Types
        {
            get
            {
                if ((_Types == null))
                {
                    _Types = base.CreateObjectSet<Type>("Types");
                }
                return _Types;
            }
        }
        private ObjectSet<Type> _Types;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vehicle> Vehicles
        {
            get
            {
                if ((_Vehicles == null))
                {
                    _Vehicles = base.CreateObjectSet<Vehicle>("Vehicles");
                }
                return _Vehicles;
            }
        }
        private ObjectSet<Vehicle> _Vehicles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditLeasesP> AuditLeasesPs
        {
            get
            {
                if ((_AuditLeasesPs == null))
                {
                    _AuditLeasesPs = base.CreateObjectSet<AuditLeasesP>("AuditLeasesPs");
                }
                return _AuditLeasesPs;
            }
        }
        private ObjectSet<AuditLeasesP> _AuditLeasesPs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DetailedVehicle> DetailedVehicles
        {
            get
            {
                if ((_DetailedVehicles == null))
                {
                    _DetailedVehicles = base.CreateObjectSet<DetailedVehicle>("DetailedVehicles");
                }
                return _DetailedVehicles;
            }
        }
        private ObjectSet<DetailedVehicle> _DetailedVehicles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeasesDetail> LeasesDetails
        {
            get
            {
                if ((_LeasesDetails == null))
                {
                    _LeasesDetails = base.CreateObjectSet<LeasesDetail>("LeasesDetails");
                }
                return _LeasesDetails;
            }
        }
        private ObjectSet<LeasesDetail> _LeasesDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeasesPayment> LeasesPayments
        {
            get
            {
                if ((_LeasesPayments == null))
                {
                    _LeasesPayments = base.CreateObjectSet<LeasesPayment>("LeasesPayments");
                }
                return _LeasesPayments;
            }
        }
        private ObjectSet<LeasesPayment> _LeasesPayments;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Colors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToColors(Color color)
        {
            base.AddObject("Colors", color);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeasesPs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeasesPs(LeasesP leasesP)
        {
            base.AddObject("LeasesPs", leasesP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseStatus(LeaseStatu leaseStatu)
        {
            base.AddObject("LeaseStatus", leaseStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseTerms(LeaseTerm leaseTerm)
        {
            base.AddObject("LeaseTerms", leaseTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Models EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModels(Model model)
        {
            base.AddObject("Models", model);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Payments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPayments(Payment payment)
        {
            base.AddObject("Payments", payment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Types EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypes(Type type)
        {
            base.AddObject("Types", type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVehicles(Vehicle vehicle)
        {
            base.AddObject("Vehicles", vehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditLeasesPs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditLeasesPs(AuditLeasesP auditLeasesP)
        {
            base.AddObject("AuditLeasesPs", auditLeasesP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DetailedVehicles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDetailedVehicles(DetailedVehicle detailedVehicle)
        {
            base.AddObject("DetailedVehicles", detailedVehicle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeasesDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeasesDetails(LeasesDetail leasesDetail)
        {
            base.AddObject("LeasesDetails", leasesDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeasesPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeasesPayments(LeasesPayment leasesPayment)
        {
            base.AddObject("LeasesPayments", leasesPayment);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="AuditLeasesP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditLeasesP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditLeasesP object.
        /// </summary>
        /// <param name="auditID">Initial value of the AuditID property.</param>
        public static AuditLeasesP CreateAuditLeasesP(global::System.Int32 auditID)
        {
            AuditLeasesP auditLeasesP = new AuditLeasesP();
            auditLeasesP.AuditID = auditID;
            return auditLeasesP;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditID
        {
            get
            {
                return _AuditID;
            }
            set
            {
                if (_AuditID != value)
                {
                    OnAuditIDChanging(value);
                    ReportPropertyChanging("AuditID");
                    _AuditID = StructuralObject.SetValidValue(value, "AuditID");
                    ReportPropertyChanged("AuditID");
                    OnAuditIDChanged();
                }
            }
        }
        private global::System.Int32 _AuditID;
        partial void OnAuditIDChanging(global::System.Int32 value);
        partial void OnAuditIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AuditDate
        {
            get
            {
                return _AuditDate;
            }
            set
            {
                OnAuditDateChanging(value);
                ReportPropertyChanging("AuditDate");
                _AuditDate = StructuralObject.SetValidValue(value, "AuditDate");
                ReportPropertyChanged("AuditDate");
                OnAuditDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AuditDate;
        partial void OnAuditDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAuditDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuditUsername
        {
            get
            {
                return _AuditUsername;
            }
            set
            {
                OnAuditUsernameChanging(value);
                ReportPropertyChanging("AuditUsername");
                _AuditUsername = StructuralObject.SetValidValue(value, true, "AuditUsername");
                ReportPropertyChanged("AuditUsername");
                OnAuditUsernameChanged();
            }
        }
        private global::System.String _AuditUsername;
        partial void OnAuditUsernameChanging(global::System.String value);
        partial void OnAuditUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BeforeAfter
        {
            get
            {
                return _BeforeAfter;
            }
            set
            {
                OnBeforeAfterChanging(value);
                ReportPropertyChanging("BeforeAfter");
                _BeforeAfter = StructuralObject.SetValidValue(value, true, "BeforeAfter");
                ReportPropertyChanged("BeforeAfter");
                OnBeforeAfterChanged();
            }
        }
        private global::System.String _BeforeAfter;
        partial void OnBeforeAfterChanging(global::System.String value);
        partial void OnBeforeAfterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChangeType
        {
            get
            {
                return _ChangeType;
            }
            set
            {
                OnChangeTypeChanging(value);
                ReportPropertyChanging("ChangeType");
                _ChangeType = StructuralObject.SetValidValue(value, true, "ChangeType");
                ReportPropertyChanged("ChangeType");
                OnChangeTypeChanged();
            }
        }
        private global::System.String _ChangeType;
        partial void OnChangeTypeChanging(global::System.String value);
        partial void OnChangeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeaseID
        {
            get
            {
                return _LeaseID;
            }
            set
            {
                OnLeaseIDChanging(value);
                ReportPropertyChanging("LeaseID");
                _LeaseID = StructuralObject.SetValidValue(value, "LeaseID");
                ReportPropertyChanged("LeaseID");
                OnLeaseIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LeaseID;
        partial void OnLeaseIDChanging(Nullable<global::System.Int32> value);
        partial void OnLeaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ContractDate
        {
            get
            {
                return _ContractDate;
            }
            set
            {
                OnContractDateChanging(value);
                ReportPropertyChanging("ContractDate");
                _ContractDate = StructuralObject.SetValidValue(value, "ContractDate");
                ReportPropertyChanged("ContractDate");
                OnContractDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ContractDate;
        partial void OnContractDateChanging(Nullable<global::System.DateTime> value);
        partial void OnContractDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FirstPaymentDate
        {
            get
            {
                return _FirstPaymentDate;
            }
            set
            {
                OnFirstPaymentDateChanging(value);
                ReportPropertyChanging("FirstPaymentDate");
                _FirstPaymentDate = StructuralObject.SetValidValue(value, "FirstPaymentDate");
                ReportPropertyChanged("FirstPaymentDate");
                OnFirstPaymentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FirstPaymentDate;
        partial void OnFirstPaymentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFirstPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MonthlyPayment
        {
            get
            {
                return _MonthlyPayment;
            }
            set
            {
                OnMonthlyPaymentChanging(value);
                ReportPropertyChanging("MonthlyPayment");
                _MonthlyPayment = StructuralObject.SetValidValue(value, "MonthlyPayment");
                ReportPropertyChanged("MonthlyPayment");
                OnMonthlyPaymentChanged();
            }
        }
        private Nullable<global::System.Int32> _MonthlyPayment;
        partial void OnMonthlyPaymentChanging(Nullable<global::System.Int32> value);
        partial void OnMonthlyPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumOfPayments
        {
            get
            {
                return _NumOfPayments;
            }
            set
            {
                OnNumOfPaymentsChanging(value);
                ReportPropertyChanging("NumOfPayments");
                _NumOfPayments = StructuralObject.SetValidValue(value, "NumOfPayments");
                ReportPropertyChanged("NumOfPayments");
                OnNumOfPaymentsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumOfPayments;
        partial void OnNumOfPaymentsChanging(Nullable<global::System.Int32> value);
        partial void OnNumOfPaymentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleID
        {
            get
            {
                return _VehicleID;
            }
            set
            {
                OnVehicleIDChanging(value);
                ReportPropertyChanging("VehicleID");
                _VehicleID = StructuralObject.SetValidValue(value, true, "VehicleID");
                ReportPropertyChanged("VehicleID");
                OnVehicleIDChanged();
            }
        }
        private global::System.String _VehicleID;
        partial void OnVehicleIDChanging(global::System.String value);
        partial void OnVehicleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value, "CustomerID");
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TermsID
        {
            get
            {
                return _TermsID;
            }
            set
            {
                OnTermsIDChanging(value);
                ReportPropertyChanging("TermsID");
                _TermsID = StructuralObject.SetValidValue(value, "TermsID");
                ReportPropertyChanged("TermsID");
                OnTermsIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TermsID;
        partial void OnTermsIDChanging(Nullable<global::System.Int32> value);
        partial void OnTermsIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="Color")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Color : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Color object.
        /// </summary>
        /// <param name="colorID">Initial value of the ColorID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Color CreateColor(global::System.Int32 colorID, global::System.String description)
        {
            Color color = new Color();
            color.ColorID = colorID;
            color.Description = description;
            return color;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColorID
        {
            get
            {
                return _ColorID;
            }
            set
            {
                if (_ColorID != value)
                {
                    OnColorIDChanging(value);
                    ReportPropertyChanging("ColorID");
                    _ColorID = StructuralObject.SetValidValue(value, "ColorID");
                    ReportPropertyChanged("ColorID");
                    OnColorIDChanged();
                }
            }
        }
        private global::System.Int32 _ColorID;
        partial void OnColorIDChanging(global::System.Int32 value);
        partial void OnColorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Vehicles_Colors", "Vehicles")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("MultiLeaseModel.fk_Vehicles_Colors", "Vehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("MultiLeaseModel.fk_Vehicles_Colors", "Vehicles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        public static Customer CreateCustomer(global::System.Int32 customerID, global::System.String firstName, global::System.String lastName, global::System.String phone)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            customer.FirstName = firstName;
            customer.LastName = lastName;
            customer.Phone = phone;
            return customer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value, "CustomerID");
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true, "Address");
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true, "City");
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, true, "Province");
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zipcode
        {
            get
            {
                return _Zipcode;
            }
            set
            {
                OnZipcodeChanging(value);
                ReportPropertyChanging("Zipcode");
                _Zipcode = StructuralObject.SetValidValue(value, true, "Zipcode");
                ReportPropertyChanged("Zipcode");
                OnZipcodeChanged();
            }
        }
        private global::System.String _Zipcode;
        partial void OnZipcodeChanging(global::System.String value);
        partial void OnZipcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Leases_Customers_LP", "LeasesP")]
        public EntityCollection<LeasesP> LeasesPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeasesP>("MultiLeaseModel.fk_Leases_Customers_LP", "LeasesP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeasesP>("MultiLeaseModel.fk_Leases_Customers_LP", "LeasesP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="DetailedVehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DetailedVehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DetailedVehicle object.
        /// </summary>
        /// <param name="vIN">Initial value of the VIN property.</param>
        /// <param name="new_Lease">Initial value of the New_Lease property.</param>
        /// <param name="automatic_Transmission">Initial value of the Automatic_Transmission property.</param>
        /// <param name="aC">Initial value of the AC property.</param>
        /// <param name="power_Locks">Initial value of the Power_Locks property.</param>
        public static DetailedVehicle CreateDetailedVehicle(global::System.String vIN, global::System.String new_Lease, global::System.String automatic_Transmission, global::System.String aC, global::System.String power_Locks)
        {
            DetailedVehicle detailedVehicle = new DetailedVehicle();
            detailedVehicle.VIN = vIN;
            detailedVehicle.New_Lease = new_Lease;
            detailedVehicle.Automatic_Transmission = automatic_Transmission;
            detailedVehicle.AC = aC;
            detailedVehicle.Power_Locks = power_Locks;
            return detailedVehicle;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VIN
        {
            get
            {
                return _VIN;
            }
            set
            {
                if (_VIN != value)
                {
                    OnVINChanging(value);
                    ReportPropertyChanging("VIN");
                    _VIN = StructuralObject.SetValidValue(value, false, "VIN");
                    ReportPropertyChanged("VIN");
                    OnVINChanged();
                }
            }
        }
        private global::System.String _VIN;
        partial void OnVINChanging(global::System.String value);
        partial void OnVINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, true, "Model");
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true, "Color");
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true, "Year");
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Kilometers
        {
            get
            {
                return _Kilometers;
            }
            set
            {
                OnKilometersChanging(value);
                ReportPropertyChanging("Kilometers");
                _Kilometers = StructuralObject.SetValidValue(value, "Kilometers");
                ReportPropertyChanged("Kilometers");
                OnKilometersChanged();
            }
        }
        private Nullable<global::System.Int32> _Kilometers;
        partial void OnKilometersChanging(Nullable<global::System.Int32> value);
        partial void OnKilometersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String New_Lease
        {
            get
            {
                return _New_Lease;
            }
            set
            {
                if (_New_Lease != value)
                {
                    OnNew_LeaseChanging(value);
                    ReportPropertyChanging("New_Lease");
                    _New_Lease = StructuralObject.SetValidValue(value, false, "New_Lease");
                    ReportPropertyChanged("New_Lease");
                    OnNew_LeaseChanged();
                }
            }
        }
        private global::System.String _New_Lease;
        partial void OnNew_LeaseChanging(global::System.String value);
        partial void OnNew_LeaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BookValue
        {
            get
            {
                return _BookValue;
            }
            set
            {
                OnBookValueChanging(value);
                ReportPropertyChanging("BookValue");
                _BookValue = StructuralObject.SetValidValue(value, "BookValue");
                ReportPropertyChanged("BookValue");
                OnBookValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _BookValue;
        partial void OnBookValueChanging(Nullable<global::System.Decimal> value);
        partial void OnBookValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Automatic_Transmission
        {
            get
            {
                return _Automatic_Transmission;
            }
            set
            {
                if (_Automatic_Transmission != value)
                {
                    OnAutomatic_TransmissionChanging(value);
                    ReportPropertyChanging("Automatic_Transmission");
                    _Automatic_Transmission = StructuralObject.SetValidValue(value, false, "Automatic_Transmission");
                    ReportPropertyChanged("Automatic_Transmission");
                    OnAutomatic_TransmissionChanged();
                }
            }
        }
        private global::System.String _Automatic_Transmission;
        partial void OnAutomatic_TransmissionChanging(global::System.String value);
        partial void OnAutomatic_TransmissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AC
        {
            get
            {
                return _AC;
            }
            set
            {
                if (_AC != value)
                {
                    OnACChanging(value);
                    ReportPropertyChanging("AC");
                    _AC = StructuralObject.SetValidValue(value, false, "AC");
                    ReportPropertyChanged("AC");
                    OnACChanged();
                }
            }
        }
        private global::System.String _AC;
        partial void OnACChanging(global::System.String value);
        partial void OnACChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Power_Locks
        {
            get
            {
                return _Power_Locks;
            }
            set
            {
                if (_Power_Locks != value)
                {
                    OnPower_LocksChanging(value);
                    ReportPropertyChanging("Power_Locks");
                    _Power_Locks = StructuralObject.SetValidValue(value, false, "Power_Locks");
                    ReportPropertyChanged("Power_Locks");
                    OnPower_LocksChanged();
                }
            }
        }
        private global::System.String _Power_Locks;
        partial void OnPower_LocksChanging(global::System.String value);
        partial void OnPower_LocksChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="LeasesDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeasesDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeasesDetail object.
        /// </summary>
        /// <param name="leaseID">Initial value of the LeaseID property.</param>
        /// <param name="customer">Initial value of the Customer property.</param>
        /// <param name="numOfYears">Initial value of the NumOfYears property.</param>
        /// <param name="maxKM">Initial value of the MaxKM property.</param>
        public static LeasesDetail CreateLeasesDetail(global::System.Int32 leaseID, global::System.String customer, global::System.Int32 numOfYears, global::System.Int32 maxKM)
        {
            LeasesDetail leasesDetail = new LeasesDetail();
            leasesDetail.LeaseID = leaseID;
            leasesDetail.Customer = customer;
            leasesDetail.NumOfYears = numOfYears;
            leasesDetail.MaxKM = maxKM;
            return leasesDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseID
        {
            get
            {
                return _LeaseID;
            }
            set
            {
                if (_LeaseID != value)
                {
                    OnLeaseIDChanging(value);
                    ReportPropertyChanging("LeaseID");
                    _LeaseID = StructuralObject.SetValidValue(value, "LeaseID");
                    ReportPropertyChanged("LeaseID");
                    OnLeaseIDChanged();
                }
            }
        }
        private global::System.Int32 _LeaseID;
        partial void OnLeaseIDChanging(global::System.Int32 value);
        partial void OnLeaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Customer
        {
            get
            {
                return _Customer;
            }
            set
            {
                if (_Customer != value)
                {
                    OnCustomerChanging(value);
                    ReportPropertyChanging("Customer");
                    _Customer = StructuralObject.SetValidValue(value, false, "Customer");
                    ReportPropertyChanged("Customer");
                    OnCustomerChanged();
                }
            }
        }
        private global::System.String _Customer;
        partial void OnCustomerChanging(global::System.String value);
        partial void OnCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractDate
        {
            get
            {
                return _ContractDate;
            }
            set
            {
                OnContractDateChanging(value);
                ReportPropertyChanging("ContractDate");
                _ContractDate = StructuralObject.SetValidValue(value, true, "ContractDate");
                ReportPropertyChanged("ContractDate");
                OnContractDateChanged();
            }
        }
        private global::System.String _ContractDate;
        partial void OnContractDateChanging(global::System.String value);
        partial void OnContractDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstPaymentDate
        {
            get
            {
                return _FirstPaymentDate;
            }
            set
            {
                OnFirstPaymentDateChanging(value);
                ReportPropertyChanging("FirstPaymentDate");
                _FirstPaymentDate = StructuralObject.SetValidValue(value, true, "FirstPaymentDate");
                ReportPropertyChanged("FirstPaymentDate");
                OnFirstPaymentDateChanged();
            }
        }
        private global::System.String _FirstPaymentDate;
        partial void OnFirstPaymentDateChanging(global::System.String value);
        partial void OnFirstPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MonthlyPayment
        {
            get
            {
                return _MonthlyPayment;
            }
            set
            {
                OnMonthlyPaymentChanging(value);
                ReportPropertyChanging("MonthlyPayment");
                _MonthlyPayment = StructuralObject.SetValidValue(value, "MonthlyPayment");
                ReportPropertyChanged("MonthlyPayment");
                OnMonthlyPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _MonthlyPayment;
        partial void OnMonthlyPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnMonthlyPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumOfPayments
        {
            get
            {
                return _NumOfPayments;
            }
            set
            {
                OnNumOfPaymentsChanging(value);
                ReportPropertyChanging("NumOfPayments");
                _NumOfPayments = StructuralObject.SetValidValue(value, "NumOfPayments");
                ReportPropertyChanged("NumOfPayments");
                OnNumOfPaymentsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumOfPayments;
        partial void OnNumOfPaymentsChanging(Nullable<global::System.Int32> value);
        partial void OnNumOfPaymentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleID
        {
            get
            {
                return _VehicleID;
            }
            set
            {
                OnVehicleIDChanging(value);
                ReportPropertyChanging("VehicleID");
                _VehicleID = StructuralObject.SetValidValue(value, true, "VehicleID");
                ReportPropertyChanged("VehicleID");
                OnVehicleIDChanged();
            }
        }
        private global::System.String _VehicleID;
        partial void OnVehicleIDChanging(global::System.String value);
        partial void OnVehicleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumOfYears
        {
            get
            {
                return _NumOfYears;
            }
            set
            {
                if (_NumOfYears != value)
                {
                    OnNumOfYearsChanging(value);
                    ReportPropertyChanging("NumOfYears");
                    _NumOfYears = StructuralObject.SetValidValue(value, "NumOfYears");
                    ReportPropertyChanged("NumOfYears");
                    OnNumOfYearsChanged();
                }
            }
        }
        private global::System.Int32 _NumOfYears;
        partial void OnNumOfYearsChanging(global::System.Int32 value);
        partial void OnNumOfYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxKM
        {
            get
            {
                return _MaxKM;
            }
            set
            {
                if (_MaxKM != value)
                {
                    OnMaxKMChanging(value);
                    ReportPropertyChanging("MaxKM");
                    _MaxKM = StructuralObject.SetValidValue(value, "MaxKM");
                    ReportPropertyChanged("MaxKM");
                    OnMaxKMChanged();
                }
            }
        }
        private global::System.Int32 _MaxKM;
        partial void OnMaxKMChanging(global::System.Int32 value);
        partial void OnMaxKMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PremiumCharge
        {
            get
            {
                return _PremiumCharge;
            }
            set
            {
                OnPremiumChargeChanging(value);
                ReportPropertyChanging("PremiumCharge");
                _PremiumCharge = StructuralObject.SetValidValue(value, "PremiumCharge");
                ReportPropertyChanged("PremiumCharge");
                OnPremiumChargeChanged();
            }
        }
        private Nullable<global::System.Decimal> _PremiumCharge;
        partial void OnPremiumChargeChanging(Nullable<global::System.Decimal> value);
        partial void OnPremiumChargeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="LeasesP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeasesP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeasesP object.
        /// </summary>
        /// <param name="leaseID">Initial value of the LeaseID property.</param>
        /// <param name="contractDate">Initial value of the ContractDate property.</param>
        public static LeasesP CreateLeasesP(global::System.Int32 leaseID, global::System.DateTime contractDate)
        {
            LeasesP leasesP = new LeasesP();
            leasesP.LeaseID = leaseID;
            leasesP.ContractDate = contractDate;
            return leasesP;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseID
        {
            get
            {
                return _LeaseID;
            }
            set
            {
                if (_LeaseID != value)
                {
                    OnLeaseIDChanging(value);
                    ReportPropertyChanging("LeaseID");
                    _LeaseID = StructuralObject.SetValidValue(value, "LeaseID");
                    ReportPropertyChanged("LeaseID");
                    OnLeaseIDChanged();
                }
            }
        }
        private global::System.Int32 _LeaseID;
        partial void OnLeaseIDChanging(global::System.Int32 value);
        partial void OnLeaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ContractDate
        {
            get
            {
                return _ContractDate;
            }
            set
            {
                if (_ContractDate != value)
                {
                    OnContractDateChanging(value);
                    ReportPropertyChanging("ContractDate");
                    _ContractDate = StructuralObject.SetValidValue(value, "ContractDate");
                    ReportPropertyChanged("ContractDate");
                    OnContractDateChanged();
                }
            }
        }
        private global::System.DateTime _ContractDate;
        partial void OnContractDateChanging(global::System.DateTime value);
        partial void OnContractDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FirstPaymentDate
        {
            get
            {
                return _FirstPaymentDate;
            }
            set
            {
                OnFirstPaymentDateChanging(value);
                ReportPropertyChanging("FirstPaymentDate");
                _FirstPaymentDate = StructuralObject.SetValidValue(value, "FirstPaymentDate");
                ReportPropertyChanged("FirstPaymentDate");
                OnFirstPaymentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FirstPaymentDate;
        partial void OnFirstPaymentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFirstPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MonthlyPayment
        {
            get
            {
                return _MonthlyPayment;
            }
            set
            {
                OnMonthlyPaymentChanging(value);
                ReportPropertyChanging("MonthlyPayment");
                _MonthlyPayment = StructuralObject.SetValidValue(value, "MonthlyPayment");
                ReportPropertyChanged("MonthlyPayment");
                OnMonthlyPaymentChanged();
            }
        }
        private Nullable<global::System.Decimal> _MonthlyPayment;
        partial void OnMonthlyPaymentChanging(Nullable<global::System.Decimal> value);
        partial void OnMonthlyPaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumOfPayments
        {
            get
            {
                return _NumOfPayments;
            }
            set
            {
                OnNumOfPaymentsChanging(value);
                ReportPropertyChanging("NumOfPayments");
                _NumOfPayments = StructuralObject.SetValidValue(value, "NumOfPayments");
                ReportPropertyChanged("NumOfPayments");
                OnNumOfPaymentsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumOfPayments;
        partial void OnNumOfPaymentsChanging(Nullable<global::System.Int32> value);
        partial void OnNumOfPaymentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleID
        {
            get
            {
                return _VehicleID;
            }
            set
            {
                OnVehicleIDChanging(value);
                ReportPropertyChanging("VehicleID");
                _VehicleID = StructuralObject.SetValidValue(value, true, "VehicleID");
                ReportPropertyChanged("VehicleID");
                OnVehicleIDChanged();
            }
        }
        private global::System.String _VehicleID;
        partial void OnVehicleIDChanging(global::System.String value);
        partial void OnVehicleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value, "CustomerID");
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Int32> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TermsID
        {
            get
            {
                return _TermsID;
            }
            set
            {
                OnTermsIDChanging(value);
                ReportPropertyChanging("TermsID");
                _TermsID = StructuralObject.SetValidValue(value, "TermsID");
                ReportPropertyChanged("TermsID");
                OnTermsIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TermsID;
        partial void OnTermsIDChanging(Nullable<global::System.Int32> value);
        partial void OnTermsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value, "StatusID");
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Leases_Customers_LP", "Customers")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("MultiLeaseModel.fk_Leases_Customers_LP", "Customers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("MultiLeaseModel.fk_Leases_Customers_LP", "Customers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("MultiLeaseModel.fk_Leases_Customers_LP", "Customers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("MultiLeaseModel.fk_Leases_Customers_LP", "Customers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Leases_Status_LP", "LeaseStatus")]
        public LeaseStatu LeaseStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseStatu>("MultiLeaseModel.fk_Leases_Status_LP", "LeaseStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseStatu>("MultiLeaseModel.fk_Leases_Status_LP", "LeaseStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaseStatu> LeaseStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseStatu>("MultiLeaseModel.fk_Leases_Status_LP", "LeaseStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaseStatu>("MultiLeaseModel.fk_Leases_Status_LP", "LeaseStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Leases_Terms_LP", "LeaseTerms")]
        public LeaseTerm LeaseTerm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("MultiLeaseModel.fk_Leases_Terms_LP", "LeaseTerms").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("MultiLeaseModel.fk_Leases_Terms_LP", "LeaseTerms").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaseTerm> LeaseTermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("MultiLeaseModel.fk_Leases_Terms_LP", "LeaseTerms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaseTerm>("MultiLeaseModel.fk_Leases_Terms_LP", "LeaseTerms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Leases_Vehicles_LP", "Vehicles")]
        public Vehicle Vehicle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("MultiLeaseModel.fk_Leases_Vehicles_LP", "Vehicles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("MultiLeaseModel.fk_Leases_Vehicles_LP", "Vehicles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vehicle> VehicleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vehicle>("MultiLeaseModel.fk_Leases_Vehicles_LP", "Vehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vehicle>("MultiLeaseModel.fk_Leases_Vehicles_LP", "Vehicles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Payments_Leases", "Payments")]
        public EntityCollection<Payment> Payments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Payment>("MultiLeaseModel.fk_Payments_Leases", "Payments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Payment>("MultiLeaseModel.fk_Payments_Leases", "Payments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="LeasesPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeasesPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeasesPayment object.
        /// </summary>
        /// <param name="leaseID">Initial value of the LeaseID property.</param>
        /// <param name="customer">Initial value of the Customer property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="paymentID">Initial value of the PaymentID property.</param>
        public static LeasesPayment CreateLeasesPayment(global::System.Int32 leaseID, global::System.String customer, global::System.String phone, global::System.Int32 paymentID)
        {
            LeasesPayment leasesPayment = new LeasesPayment();
            leasesPayment.LeaseID = leaseID;
            leasesPayment.Customer = customer;
            leasesPayment.Phone = phone;
            leasesPayment.PaymentID = paymentID;
            return leasesPayment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseID
        {
            get
            {
                return _LeaseID;
            }
            set
            {
                if (_LeaseID != value)
                {
                    OnLeaseIDChanging(value);
                    ReportPropertyChanging("LeaseID");
                    _LeaseID = StructuralObject.SetValidValue(value, "LeaseID");
                    ReportPropertyChanged("LeaseID");
                    OnLeaseIDChanged();
                }
            }
        }
        private global::System.Int32 _LeaseID;
        partial void OnLeaseIDChanging(global::System.Int32 value);
        partial void OnLeaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractDate
        {
            get
            {
                return _ContractDate;
            }
            set
            {
                OnContractDateChanging(value);
                ReportPropertyChanging("ContractDate");
                _ContractDate = StructuralObject.SetValidValue(value, true, "ContractDate");
                ReportPropertyChanged("ContractDate");
                OnContractDateChanged();
            }
        }
        private global::System.String _ContractDate;
        partial void OnContractDateChanging(global::System.String value);
        partial void OnContractDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Customer
        {
            get
            {
                return _Customer;
            }
            set
            {
                if (_Customer != value)
                {
                    OnCustomerChanging(value);
                    ReportPropertyChanging("Customer");
                    _Customer = StructuralObject.SetValidValue(value, false, "Customer");
                    ReportPropertyChanged("Customer");
                    OnCustomerChanged();
                }
            }
        }
        private global::System.String _Customer;
        partial void OnCustomerChanging(global::System.String value);
        partial void OnCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                if (_Phone != value)
                {
                    OnPhoneChanging(value);
                    ReportPropertyChanging("Phone");
                    _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                    ReportPropertyChanged("Phone");
                    OnPhoneChanged();
                }
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VehicleID
        {
            get
            {
                return _VehicleID;
            }
            set
            {
                OnVehicleIDChanging(value);
                ReportPropertyChanging("VehicleID");
                _VehicleID = StructuralObject.SetValidValue(value, true, "VehicleID");
                ReportPropertyChanged("VehicleID");
                OnVehicleIDChanged();
            }
        }
        private global::System.String _VehicleID;
        partial void OnVehicleIDChanging(global::System.String value);
        partial void OnVehicleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, true, "Model");
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true, "Year");
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentID
        {
            get
            {
                return _PaymentID;
            }
            set
            {
                if (_PaymentID != value)
                {
                    OnPaymentIDChanging(value);
                    ReportPropertyChanging("PaymentID");
                    _PaymentID = StructuralObject.SetValidValue(value, "PaymentID");
                    ReportPropertyChanged("PaymentID");
                    OnPaymentIDChanged();
                }
            }
        }
        private global::System.Int32 _PaymentID;
        partial void OnPaymentIDChanging(global::System.Int32 value);
        partial void OnPaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value, true, "PaymentDate");
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.String _PaymentDate;
        partial void OnPaymentDateChanging(global::System.String value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Valid
        {
            get
            {
                return _Valid;
            }
            set
            {
                OnValidChanging(value);
                ReportPropertyChanging("Valid");
                _Valid = StructuralObject.SetValidValue(value, true, "Valid");
                ReportPropertyChanged("Valid");
                OnValidChanged();
            }
        }
        private global::System.String _Valid;
        partial void OnValidChanging(global::System.String value);
        partial void OnValidChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="LeaseStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseStatu object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        public static LeaseStatu CreateLeaseStatu(global::System.Int32 statusID)
        {
            LeaseStatu leaseStatu = new LeaseStatu();
            leaseStatu.StatusID = statusID;
            return leaseStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value, "StatusID");
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Leases_Status_LP", "LeasesP")]
        public EntityCollection<LeasesP> LeasesPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeasesP>("MultiLeaseModel.fk_Leases_Status_LP", "LeasesP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeasesP>("MultiLeaseModel.fk_Leases_Status_LP", "LeasesP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="LeaseTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseTerm object.
        /// </summary>
        /// <param name="leaseTermID">Initial value of the LeaseTermID property.</param>
        /// <param name="numOfYears">Initial value of the NumOfYears property.</param>
        /// <param name="maxKM">Initial value of the MaxKM property.</param>
        public static LeaseTerm CreateLeaseTerm(global::System.Int32 leaseTermID, global::System.Int32 numOfYears, global::System.Int32 maxKM)
        {
            LeaseTerm leaseTerm = new LeaseTerm();
            leaseTerm.LeaseTermID = leaseTermID;
            leaseTerm.NumOfYears = numOfYears;
            leaseTerm.MaxKM = maxKM;
            return leaseTerm;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTermID
        {
            get
            {
                return _LeaseTermID;
            }
            set
            {
                if (_LeaseTermID != value)
                {
                    OnLeaseTermIDChanging(value);
                    ReportPropertyChanging("LeaseTermID");
                    _LeaseTermID = StructuralObject.SetValidValue(value, "LeaseTermID");
                    ReportPropertyChanged("LeaseTermID");
                    OnLeaseTermIDChanged();
                }
            }
        }
        private global::System.Int32 _LeaseTermID;
        partial void OnLeaseTermIDChanging(global::System.Int32 value);
        partial void OnLeaseTermIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumOfYears
        {
            get
            {
                return _NumOfYears;
            }
            set
            {
                OnNumOfYearsChanging(value);
                ReportPropertyChanging("NumOfYears");
                _NumOfYears = StructuralObject.SetValidValue(value, "NumOfYears");
                ReportPropertyChanged("NumOfYears");
                OnNumOfYearsChanged();
            }
        }
        private global::System.Int32 _NumOfYears;
        partial void OnNumOfYearsChanging(global::System.Int32 value);
        partial void OnNumOfYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxKM
        {
            get
            {
                return _MaxKM;
            }
            set
            {
                OnMaxKMChanging(value);
                ReportPropertyChanging("MaxKM");
                _MaxKM = StructuralObject.SetValidValue(value, "MaxKM");
                ReportPropertyChanged("MaxKM");
                OnMaxKMChanged();
            }
        }
        private global::System.Int32 _MaxKM;
        partial void OnMaxKMChanging(global::System.Int32 value);
        partial void OnMaxKMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PremiumCharge
        {
            get
            {
                return _PremiumCharge;
            }
            set
            {
                OnPremiumChargeChanging(value);
                ReportPropertyChanging("PremiumCharge");
                _PremiumCharge = StructuralObject.SetValidValue(value, "PremiumCharge");
                ReportPropertyChanged("PremiumCharge");
                OnPremiumChargeChanged();
            }
        }
        private Nullable<global::System.Decimal> _PremiumCharge;
        partial void OnPremiumChargeChanging(Nullable<global::System.Decimal> value);
        partial void OnPremiumChargeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Leases_Terms_LP", "LeasesP")]
        public EntityCollection<LeasesP> LeasesPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeasesP>("MultiLeaseModel.fk_Leases_Terms_LP", "LeasesP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeasesP>("MultiLeaseModel.fk_Leases_Terms_LP", "LeasesP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="Model")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Model : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Model object.
        /// </summary>
        /// <param name="modelID">Initial value of the ModelID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Model CreateModel(global::System.Int32 modelID, global::System.String description)
        {
            Model model = new Model();
            model.ModelID = modelID;
            model.Description = description;
            return model;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModelID
        {
            get
            {
                return _ModelID;
            }
            set
            {
                if (_ModelID != value)
                {
                    OnModelIDChanging(value);
                    ReportPropertyChanging("ModelID");
                    _ModelID = StructuralObject.SetValidValue(value, "ModelID");
                    ReportPropertyChanged("ModelID");
                    OnModelIDChanged();
                }
            }
        }
        private global::System.Int32 _ModelID;
        partial void OnModelIDChanging(global::System.Int32 value);
        partial void OnModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Vehicles_Models", "Vehicles")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("MultiLeaseModel.fk_Vehicles_Models", "Vehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("MultiLeaseModel.fk_Vehicles_Models", "Vehicles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="Payment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Payment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Payment object.
        /// </summary>
        /// <param name="paymentID">Initial value of the PaymentID property.</param>
        public static Payment CreatePayment(global::System.Int32 paymentID)
        {
            Payment payment = new Payment();
            payment.PaymentID = paymentID;
            return payment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PaymentID
        {
            get
            {
                return _PaymentID;
            }
            set
            {
                if (_PaymentID != value)
                {
                    OnPaymentIDChanging(value);
                    ReportPropertyChanging("PaymentID");
                    _PaymentID = StructuralObject.SetValidValue(value, "PaymentID");
                    ReportPropertyChanged("PaymentID");
                    OnPaymentIDChanged();
                }
            }
        }
        private global::System.Int32 _PaymentID;
        partial void OnPaymentIDChanging(global::System.Int32 value);
        partial void OnPaymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeaseID
        {
            get
            {
                return _LeaseID;
            }
            set
            {
                OnLeaseIDChanging(value);
                ReportPropertyChanging("LeaseID");
                _LeaseID = StructuralObject.SetValidValue(value, "LeaseID");
                ReportPropertyChanged("LeaseID");
                OnLeaseIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LeaseID;
        partial void OnLeaseIDChanging(Nullable<global::System.Int32> value);
        partial void OnLeaseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ContractDate
        {
            get
            {
                return _ContractDate;
            }
            set
            {
                OnContractDateChanging(value);
                ReportPropertyChanging("ContractDate");
                _ContractDate = StructuralObject.SetValidValue(value, "ContractDate");
                ReportPropertyChanged("ContractDate");
                OnContractDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ContractDate;
        partial void OnContractDateChanging(Nullable<global::System.DateTime> value);
        partial void OnContractDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value, "PaymentDate");
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaymentDate;
        partial void OnPaymentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value, "Amount");
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Valid
        {
            get
            {
                return _Valid;
            }
            set
            {
                OnValidChanging(value);
                ReportPropertyChanging("Valid");
                _Valid = StructuralObject.SetValidValue(value, true, "Valid");
                ReportPropertyChanged("Valid");
                OnValidChanged();
            }
        }
        private global::System.String _Valid;
        partial void OnValidChanging(global::System.String value);
        partial void OnValidChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Payments_Leases", "LeasesP")]
        public LeasesP LeasesP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeasesP>("MultiLeaseModel.fk_Payments_Leases", "LeasesP").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeasesP>("MultiLeaseModel.fk_Payments_Leases", "LeasesP").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeasesP> LeasesPReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeasesP>("MultiLeaseModel.fk_Payments_Leases", "LeasesP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeasesP>("MultiLeaseModel.fk_Payments_Leases", "LeasesP", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Type object.
        /// </summary>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Type CreateType(global::System.Int32 typeID, global::System.String description)
        {
            Type type = new Type();
            type.TypeID = typeID;
            type.Description = description;
            return type;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                if (_TypeID != value)
                {
                    OnTypeIDChanging(value);
                    ReportPropertyChanging("TypeID");
                    _TypeID = StructuralObject.SetValidValue(value, "TypeID");
                    ReportPropertyChanged("TypeID");
                    OnTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Vehicles_Types", "Vehicles")]
        public EntityCollection<Vehicle> Vehicles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vehicle>("MultiLeaseModel.fk_Vehicles_Types", "Vehicles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vehicle>("MultiLeaseModel.fk_Vehicles_Types", "Vehicles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MultiLeaseModel", Name="Vehicle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vehicle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vehicle object.
        /// </summary>
        /// <param name="vIN">Initial value of the VIN property.</param>
        public static Vehicle CreateVehicle(global::System.String vIN)
        {
            Vehicle vehicle = new Vehicle();
            vehicle.VIN = vIN;
            return vehicle;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VIN
        {
            get
            {
                return _VIN;
            }
            set
            {
                if (_VIN != value)
                {
                    OnVINChanging(value);
                    ReportPropertyChanging("VIN");
                    _VIN = StructuralObject.SetValidValue(value, false, "VIN");
                    ReportPropertyChanged("VIN");
                    OnVINChanged();
                }
            }
        }
        private global::System.String _VIN;
        partial void OnVINChanging(global::System.String value);
        partial void OnVINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModelID
        {
            get
            {
                return _ModelID;
            }
            set
            {
                OnModelIDChanging(value);
                ReportPropertyChanging("ModelID");
                _ModelID = StructuralObject.SetValidValue(value, "ModelID");
                ReportPropertyChanged("ModelID");
                OnModelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ModelID;
        partial void OnModelIDChanging(Nullable<global::System.Int32> value);
        partial void OnModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value, "TypeID");
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TypeID;
        partial void OnTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ColorID
        {
            get
            {
                return _ColorID;
            }
            set
            {
                OnColorIDChanging(value);
                ReportPropertyChanging("ColorID");
                _ColorID = StructuralObject.SetValidValue(value, "ColorID");
                ReportPropertyChanged("ColorID");
                OnColorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ColorID;
        partial void OnColorIDChanging(Nullable<global::System.Int32> value);
        partial void OnColorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true, "Year");
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Kilometers
        {
            get
            {
                return _Kilometers;
            }
            set
            {
                OnKilometersChanging(value);
                ReportPropertyChanging("Kilometers");
                _Kilometers = StructuralObject.SetValidValue(value, "Kilometers");
                ReportPropertyChanged("Kilometers");
                OnKilometersChanged();
            }
        }
        private Nullable<global::System.Int32> _Kilometers;
        partial void OnKilometersChanging(Nullable<global::System.Int32> value);
        partial void OnKilometersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NewLease
        {
            get
            {
                return _NewLease;
            }
            set
            {
                OnNewLeaseChanging(value);
                ReportPropertyChanging("NewLease");
                _NewLease = StructuralObject.SetValidValue(value, "NewLease");
                ReportPropertyChanged("NewLease");
                OnNewLeaseChanged();
            }
        }
        private Nullable<global::System.Boolean> _NewLease;
        partial void OnNewLeaseChanging(Nullable<global::System.Boolean> value);
        partial void OnNewLeaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BookValue
        {
            get
            {
                return _BookValue;
            }
            set
            {
                OnBookValueChanging(value);
                ReportPropertyChanging("BookValue");
                _BookValue = StructuralObject.SetValidValue(value, "BookValue");
                ReportPropertyChanged("BookValue");
                OnBookValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _BookValue;
        partial void OnBookValueChanging(Nullable<global::System.Decimal> value);
        partial void OnBookValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AutoTransmission
        {
            get
            {
                return _AutoTransmission;
            }
            set
            {
                OnAutoTransmissionChanging(value);
                ReportPropertyChanging("AutoTransmission");
                _AutoTransmission = StructuralObject.SetValidValue(value, "AutoTransmission");
                ReportPropertyChanged("AutoTransmission");
                OnAutoTransmissionChanged();
            }
        }
        private Nullable<global::System.Boolean> _AutoTransmission;
        partial void OnAutoTransmissionChanging(Nullable<global::System.Boolean> value);
        partial void OnAutoTransmissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AC
        {
            get
            {
                return _AC;
            }
            set
            {
                OnACChanging(value);
                ReportPropertyChanging("AC");
                _AC = StructuralObject.SetValidValue(value, "AC");
                ReportPropertyChanged("AC");
                OnACChanged();
            }
        }
        private Nullable<global::System.Boolean> _AC;
        partial void OnACChanging(Nullable<global::System.Boolean> value);
        partial void OnACChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PowerLocks
        {
            get
            {
                return _PowerLocks;
            }
            set
            {
                OnPowerLocksChanging(value);
                ReportPropertyChanging("PowerLocks");
                _PowerLocks = StructuralObject.SetValidValue(value, "PowerLocks");
                ReportPropertyChanged("PowerLocks");
                OnPowerLocksChanged();
            }
        }
        private Nullable<global::System.Boolean> _PowerLocks;
        partial void OnPowerLocksChanging(Nullable<global::System.Boolean> value);
        partial void OnPowerLocksChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Vehicles_Colors", "Colors")]
        public Color Color
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("MultiLeaseModel.fk_Vehicles_Colors", "Colors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("MultiLeaseModel.fk_Vehicles_Colors", "Colors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Color> ColorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Color>("MultiLeaseModel.fk_Vehicles_Colors", "Colors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Color>("MultiLeaseModel.fk_Vehicles_Colors", "Colors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Leases_Vehicles_LP", "LeasesP")]
        public EntityCollection<LeasesP> LeasesPs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeasesP>("MultiLeaseModel.fk_Leases_Vehicles_LP", "LeasesP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeasesP>("MultiLeaseModel.fk_Leases_Vehicles_LP", "LeasesP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Vehicles_Models", "Models")]
        public Model Model
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("MultiLeaseModel.fk_Vehicles_Models", "Models").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("MultiLeaseModel.fk_Vehicles_Models", "Models").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Model> ModelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Model>("MultiLeaseModel.fk_Vehicles_Models", "Models");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Model>("MultiLeaseModel.fk_Vehicles_Models", "Models", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MultiLeaseModel", "fk_Vehicles_Types", "Types")]
        public Type Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("MultiLeaseModel.fk_Vehicles_Types", "Types").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("MultiLeaseModel.fk_Vehicles_Types", "Types").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Type> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Type>("MultiLeaseModel.fk_Vehicles_Types", "Types");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Type>("MultiLeaseModel.fk_Vehicles_Types", "Types", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
